/**
 * Copyright (c) 2024, Collins Aerospace.
 * Developed with the sponsorship of Defense Advanced Research Projects Agency (DARPA).
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this data, 
 * including any software or models in source or binary form, as well as any drawings, specifications, 
 * and documentation (collectively "the Data"), to deal in the Data without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Data, and to permit persons to whom the Data is furnished to do so, 
 * subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or 
 * substantial portions of the Data.
 * 
 * THE DATA IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT 
 * LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 * IN NO EVENT SHALL THE AUTHORS, SPONSORS, DEVELOPERS, CONTRIBUTORS, OR COPYRIGHT HOLDERS BE LIABLE 
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE DATA.
 * 
 * Generated by Xtext version 2.33.0.
 */
package com.collins.trustedmethods.matrics.soar.soar;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see com.collins.trustedmethods.matrics.soar.soar.SoarPackage
 * @generated
 */
public interface SoarFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  SoarFactory eINSTANCE = com.collins.trustedmethods.matrics.soar.soar.impl.SoarFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Annex Library</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Annex Library</em>'.
   * @generated
   */
  SoarAnnexLibrary createSoarAnnexLibrary();

  /**
   * Returns a new object of class '<em>Annex Subclause</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Annex Subclause</em>'.
   * @generated
   */
  SoarAnnexSubclause createSoarAnnexSubclause();

  /**
   * Returns a new object of class '<em>Production</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Production</em>'.
   * @generated
   */
  SoarProduction createSoarProduction();

  /**
   * Returns a new object of class '<em>Condition Side</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Condition Side</em>'.
   * @generated
   */
  ConditionSide createConditionSide();

  /**
   * Returns a new object of class '<em>State Imp Condition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>State Imp Condition</em>'.
   * @generated
   */
  StateImpCondition createStateImpCondition();

  /**
   * Returns a new object of class '<em>Cond</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cond</em>'.
   * @generated
   */
  Cond createCond();

  /**
   * Returns a new object of class '<em>Positive Cond</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Positive Cond</em>'.
   * @generated
   */
  PositiveCond createPositiveCond();

  /**
   * Returns a new object of class '<em>Cond For One Id</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cond For One Id</em>'.
   * @generated
   */
  CondForOneId createCondForOneId();

  /**
   * Returns a new object of class '<em>Attr Value Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Attr Value Test</em>'.
   * @generated
   */
  AttrValueTest createAttrValueTest();

  /**
   * Returns a new object of class '<em>Value Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Value Test</em>'.
   * @generated
   */
  ValueTest createValueTest();

  /**
   * Returns a new object of class '<em>Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Test</em>'.
   * @generated
   */
  Test createTest();

  /**
   * Returns a new object of class '<em>Disjunction Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Disjunction Test</em>'.
   * @generated
   */
  DisjunctionTest createDisjunctionTest();

  /**
   * Returns a new object of class '<em>Single Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Single Test</em>'.
   * @generated
   */
  SingleTest createSingleTest();

  /**
   * Returns a new object of class '<em>Relational Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Relational Test</em>'.
   * @generated
   */
  RelationalTest createRelationalTest();

  /**
   * Returns a new object of class '<em>Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable</em>'.
   * @generated
   */
  Variable createVariable();

  /**
   * Returns a new object of class '<em>Action Side</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Action Side</em>'.
   * @generated
   */
  ActionSide createActionSide();

  /**
   * Returns a new object of class '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Action</em>'.
   * @generated
   */
  Action createAction();

  /**
   * Returns a new object of class '<em>Print</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Print</em>'.
   * @generated
   */
  Print createPrint();

  /**
   * Returns a new object of class '<em>Func Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Func Call</em>'.
   * @generated
   */
  FuncCall createFuncCall();

  /**
   * Returns a new object of class '<em>Value</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Value</em>'.
   * @generated
   */
  Value createValue();

  /**
   * Returns a new object of class '<em>Attr Value Make</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Attr Value Make</em>'.
   * @generated
   */
  AttrValueMake createAttrValueMake();

  /**
   * Returns a new object of class '<em>Variableor Sym Constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variableor Sym Constant</em>'.
   * @generated
   */
  VariableorSymConstant createVariableorSymConstant();

  /**
   * Returns a new object of class '<em>Constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Constant</em>'.
   * @generated
   */
  Constant createConstant();

  /**
   * Returns a new object of class '<em>Value Make</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Value Make</em>'.
   * @generated
   */
  ValueMake createValueMake();

  /**
   * Returns a new object of class '<em>Pref Specifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Pref Specifier</em>'.
   * @generated
   */
  PrefSpecifier createPrefSpecifier();

  /**
   * Returns a new object of class '<em>State Imp Cond</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>State Imp Cond</em>'.
   * @generated
   */
  StateImpCond createStateImpCond();

  /**
   * Returns a new object of class '<em>Conjuctive Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conjuctive Test</em>'.
   * @generated
   */
  ConjuctiveTest createConjuctiveTest();

  /**
   * Returns a new object of class '<em>Simple Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Simple Test</em>'.
   * @generated
   */
  SimpleTest createSimpleTest();

  /**
   * Returns a new object of class '<em>Multi Value Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Multi Value Test</em>'.
   * @generated
   */
  MultiValueTest createMultiValueTest();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  SoarPackage getSoarPackage();

} //SoarFactory
